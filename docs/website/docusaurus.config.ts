import { themes as prismThemes } from "prism-react-renderer";
import type { Config } from "@docusaurus/types";
import type * as Preset from "@docusaurus/preset-classic";
import doxygenQarStreamingCNavbar from "./docusaurus-config-navbar-doxygen-qar-streaming-c.json";

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

const config: Config = {
	title: "Quaternar Docs",
	tagline: "AR/VR streaming, APIs, and knowledge base",
	favicon: "img/favicon.ico",

	// Future flags, see https://docusaurus.io/docs/api/docusaurus-config#future
	future: {
		v4: true, // Improve compatibility with the upcoming Docusaurus v4
	},

	// Set the production url of your site here
	url: "https://example.com",
	// Set the /<baseUrl>/ pathname under which your site is served
	// For GitHub pages deployment, it is often '/<projectName>/'
	baseUrl: "/",

	// GitHub pages deployment config.
	// If you aren't using GitHub pages, you don't need these.
	organizationName: "Quaternar", // Usually your GitHub org/user name.
	projectName: "quaternar", // Usually your repo name.

	onBrokenLinks: "throw",
	trailingSlash: true,

	// Even if you don't use internationalization, you can use this field to set
	// useful metadata like html lang. For example, if your site is Chinese, you
	// may want to replace "en" with "zh-Hans".
	i18n: {
		defaultLocale: "en",
		locales: ["en"],
	},

	presets: [
		[
			"classic",
			{
				docs: {
					sidebarPath: "./sidebars.ts",
					// Please change this to your repo.
					// Remove this to remove the "edit this page" links.
					editUrl:
						"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/",
				},
				// blog: {
				// 	showReadingTime: true,
				// 	feedOptions: {
				// 		type: ["rss", "atom"],
				// 		xslt: true,
				// 	},
				// 	// Please change this to your repo.
				// 	// Remove this to remove the "edit this page" links.
				// 	editUrl:
				// 		"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/",
				// 	// Useful options to enforce blogging best practices
				// 	onInlineTags: "warn",
				// 	onInlineAuthors: "warn",
				// 	onUntruncatedBlogPosts: "warn",
				// },
				theme: {
					customCss: [
						"./src/css/custom-doxygen2docusaurus.css",
						"./src/css/custom.css",
					],
				},
			} satisfies Preset.Options,
		],
	],

	// Mount additional documentation sources (Doxygen -> Docusaurus Markdown)
	plugins: [
		[
			"@docusaurus/plugin-content-docs",
			{
				id: "api",
				// Generated by doxygen + doxygen2docusaurus
				path: "api",
				routeBasePath: "api/",
				sidebarPath: "./sidebar_api.ts",
			},
		],
	],

	themeConfig: {
		// Replace with your project's social card
		image: "img/docusaurus-social-card.jpg",
		navbar: {
			logo: {
				alt: "Quaternar Logo",
				src: "img/quaternar-logo.png",
				srcDark: "img/quaternar-logo-dark.png",
			},
			items: [
				{
					type: "docSidebar",
					sidebarId: "tutorialSidebar",
					position: "left",
					label: "Knowledge Base",
				},
				doxygenQarStreamingCNavbar,
				{
					href: "https://github.com/quaternar/qaros",
					label: "GitHub",
					position: "right",
				},
			],
		},
		footer: {
			style: "dark",
			links: [
				{
					title: "Docs",
					items: [
						{
							label: "Knowledge Base",
							to: "/docs/intro",
						},
					],
				},
				{
					title: "Company",
					items: [
						{
							label: "Website",
							href: "https://quaternar.com",
						},
						{
							label: "Contact",
							href: "mailto:contact@quaternar.com",
						},
					],
				},
				{
					title: "Social",
					items: [
						{
							label: "LinkedIn",
							href: "https://www.linkedin.com/company/quaternar/",
						},
						{
							label: "YouTube",
							href: "https://www.youtube.com/@QuaternAR",
						},
					],
				},
			],
			copyright: `Â© ${new Date().getFullYear()} Quaternar a.s. All rights reserved.`,
		},
		prism: {
			theme: prismThemes.github,
			darkTheme: prismThemes.dracula,
		},
	} satisfies Preset.ThemeConfig,
	markdown: {
		format: "detect",
	},
};

export default config;
